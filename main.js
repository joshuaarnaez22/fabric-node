import fs from "fs";
import * as fabric from "fabric/node"; // v6
import { registerFont } from "canvas";
const canvas = new fabric.StaticCanvas(null, { width: 800, height: 800 });

registerFont("./fonts/Roboto-Italic.ttf", { family: "roboto" });
const fabricJSON = {
  version: "4.6.0",
  objects: [
    {
      type: "rect",
      version: "5.3.0",
      originX: "left",
      originY: "top",
      left: 283,
      top: 87,
      width: 158,
      height: 98,
      fill: "rgba(13, 98, 197, 0.5)",
      stroke: "rgba(241, 34, 55, 1)",
      strokeWidth: 17,
      strokeDashArray: null,
      strokeLineCap: "butt",
      strokeDashOffset: 0,
      strokeLineJoin: "miter",
      strokeUniform: true,
      strokeMiterLimit: 4,
      scaleX: 1,
      scaleY: 1,
      angle: 0,
      flipX: false,
      flipY: false,
      opacity: 1,
      shadow: null,
      visible: true,
      backgroundColor: "",
      fillRule: "nonzero",
      paintFirst: "fill",
      globalCompositeOperation: "source-over",
      skewX: 0,
      skewY: 0,
      rx: 0,
      ry: 0,
    },
    {
      type: "i-text",
      version: "5.3.0",
      originX: "left",
      originY: "top",
      left: 0,
      top: 269.4,
      width: 269,
      height: 45.2,
      fill: "rgb(0,0,0)",
      stroke: null,
      strokeWidth: 1,
      strokeDashArray: null,
      strokeLineCap: "butt",
      strokeDashOffset: 0,
      strokeLineJoin: "miter",
      strokeUniform: false,
      strokeMiterLimit: 4,
      scaleX: 1,
      scaleY: 1,
      angle: 0,
      flipX: false,
      flipY: false,
      opacity: 1,
      shadow: null,
      visible: true,
      backgroundColor: "",
      fillRule: "nonzero",
      paintFirst: "fill",
      globalCompositeOperation: "source-over",
      skewX: 0,
      skewY: 0,
      fontFamily: "roboto",
      fontWeight: "normal",
      fontSize: 40,
      text: "Org_Name_LC",
      underline: false,
      overline: false,
      linethrough: false,
      textAlign: "left",
      fontStyle: "normal",
      lineHeight: 1.16,
      textBackgroundColor: "",
      charSpacing: 0,
      styles: [],
      direction: "ltr",
      path: null,
      pathStartOffset: 0,
      pathSide: "left",
      pathAlign: "baseline",
      id: "Org_Name_LC",
    },
    {
      type: "i-text",
      version: "5.3.0",
      originX: "left",
      originY: "top",
      left: 523.36,
      top: 268.4,
      width: 275.64,
      height: 45.2,
      fill: "rgb(0,0,0)",
      stroke: null,
      strokeWidth: 1,
      strokeDashArray: null,
      strokeLineCap: "butt",
      strokeDashOffset: 0,
      strokeLineJoin: "miter",
      strokeUniform: false,
      strokeMiterLimit: 4,
      scaleX: 1,
      scaleY: 1,
      angle: 0,
      flipX: false,
      flipY: false,
      opacity: 1,
      shadow: null,
      visible: true,
      backgroundColor: "",
      fillRule: "nonzero",
      paintFirst: "fill",
      globalCompositeOperation: "source-over",
      skewX: 0,
      skewY: 0,
      fontFamily: "roboto",
      fontWeight: "normal",
      fontSize: 40,
      text: "Org_Name_UC",
      underline: false,
      overline: false,
      linethrough: false,
      textAlign: "left",
      fontStyle: "normal",
      lineHeight: 1.16,
      textBackgroundColor: "",
      charSpacing: 0,
      styles: [],
      direction: "ltr",
      path: null,
      pathStartOffset: 0,
      pathSide: "left",
      pathAlign: "baseline",
      id: "Org_Name_UC",
    },
    {
      type: "i-text",
      version: "5.3.0",
      originX: "left",
      originY: "top",
      left: 0,
      top: 349.4,
      width: 275.64,
      height: 45.2,
      fill: "rgb(0,0,0)",
      stroke: null,
      strokeWidth: 1,
      strokeDashArray: null,
      strokeLineCap: "butt",
      strokeDashOffset: 0,
      strokeLineJoin: "miter",
      strokeUniform: false,
      strokeMiterLimit: 4,
      scaleX: 1,
      scaleY: 1,
      angle: 0,
      flipX: false,
      flipY: false,
      opacity: 1,
      shadow: null,
      visible: true,
      backgroundColor: "",
      fillRule: "nonzero",
      paintFirst: "fill",
      globalCompositeOperation: "source-over",
      skewX: 0,
      skewY: 0,
      fontFamily: "roboto",
      fontWeight: "normal",
      fontSize: 40,
      text: "Org_Name_UC",
      underline: false,
      overline: false,
      linethrough: false,
      textAlign: "left",
      fontStyle: "normal",
      lineHeight: 1.16,
      textBackgroundColor: "",
      charSpacing: 0,
      styles: [],
      direction: "ltr",
      path: null,
      pathStartOffset: 0,
      pathSide: "left",
      pathAlign: "baseline",
      id: "Org_Name_UC",
    },
    {
      type: "i-text",
      version: "5.3.0",
      originX: "left",
      originY: "top",
      left: 598.92,
      top: 343.4,
      width: 200.08,
      height: 45.2,
      fill: "rgb(0,0,0)",
      stroke: null,
      strokeWidth: 1,
      strokeDashArray: null,
      strokeLineCap: "butt",
      strokeDashOffset: 0,
      strokeLineJoin: "miter",
      strokeUniform: false,
      strokeMiterLimit: 4,
      scaleX: 1,
      scaleY: 1,
      angle: 0,
      flipX: false,
      flipY: false,
      opacity: 1,
      shadow: null,
      visible: true,
      backgroundColor: "",
      fillRule: "nonzero",
      paintFirst: "fill",
      globalCompositeOperation: "source-over",
      skewX: 0,
      skewY: 0,
      fontFamily: "roboto",
      fontWeight: "normal",
      fontSize: 40,
      text: "Nickname1",
      underline: false,
      overline: false,
      linethrough: false,
      textAlign: "left",
      fontStyle: "normal",
      lineHeight: 1.16,
      textBackgroundColor: "",
      charSpacing: 0,
      styles: [],
      direction: "ltr",
      path: null,
      pathStartOffset: 0,
      pathSide: "left",
      pathAlign: "baseline",
      id: "Nickname1",
    },
  ],
};

const loadCanvasJson = async (data) => {
  try {
    await canvas.loadFromJSON(data);
    canvas.backgroundColor = "white";
    canvas.renderAll();
    canvas.createPNGStream().pipe(fs.createWriteStream("./output.png"));
  } catch (error) {
    console.error("Error loading shapes from json:", error);
  }
};
loadCanvasJson(fabricJSON);
